name: PR

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  branch-protection:
    runs-on: ubuntu-latest

    steps:
      - name: Check if branch can merge to main
        if: github.event.pull_request.base.ref == 'main'
        run: |
          if [[ "${GITHUB_HEAD_REF}" != "develop" && "${GITHUB_HEAD_REF}" != hotfix/* ]]; then
            echo "Invalid branch for merge to main. Only 'develop' or 'hotfix/*' can merge to main."
            exit 1
          else
            echo "Branch is allowed to merge to main."
          fi

      - name: Check if branch can merge to develop
        if: github.event.pull_request.base.ref == 'develop'
        run: |
          if [[ "${GITHUB_HEAD_REF}" != feature/* && "${GITHUB_HEAD_REF}" != hotfix/* && "${GITHUB_HEAD_REF}" != support/*  && "${GITHUB_HEAD_REF}" != main ]]; then
            echo "Invalid branch for merge to develop. Only 'feature/*', 'hotfix/*', or 'support/*' can merge to develop."
            exit 1
          else
            echo "Branch is allowed to merge to develop."
          fi

      - name: Validate Commit Messages
        run: |
          invalid_commits=0
          while IFS= read -r commit; do
            message="${commit##* }"
            if [[ ${#message} -le 5 ]]; then
              echo "Invalid commit message: $message. Must be longer than 5 characters."
              invalid_commits=$((invalid_commits+1))
            fi
          done < <(git log origin/${{ github.event.pull_request.base.ref }}..HEAD --pretty=format:'%H %s')

          if [[ $invalid_commits -gt 0 ]]; then
            echo "$invalid_commits commit(s) have invalid messages."
            exit 1
          else
            echo "All commit messages are valid."
          fi

  label:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Apply Labels
        uses: actions/labeler@v4
        with:
          repo-token: "${{ secrets.CI_CD }}"
