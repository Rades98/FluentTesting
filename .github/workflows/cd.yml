name: CD

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
  pull_request:
    branches:
      - develop
  push:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - name: Get Version from csproj
        id: get_version
        run: |
          VERSION=$(grep -oPm1 "(?<=<Version>)[^<]+" src/FluentTesting/common.props)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "Extracted version: $VERSION"

      - name: Set Final Version
        id: set_final_version
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" && "${{ github.base_ref }}" == "develop" ]]; then
            FINAL_VERSION="${{ env.VERSION }}-pr-${GITHUB_SHA::8}"
          elif [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/develop" ]]; then
            FINAL_VERSION="${{ env.VERSION }}-beta-${GITHUB_SHA::8}"
          elif [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main" ]]; then
            FINAL_VERSION="${{ env.VERSION }}"
          else
            FINAL_VERSION=""
          fi
          echo "FINAL_VERSION=${FINAL_VERSION}" >> $GITHUB_ENV
          echo "Final version set: $FINAL_VERSION"

      - name: Check Final Version
        run: |
          if [[ -z "${{ env.FINAL_VERSION }}" ]]; then
            echo "Error: Version number is null. Publish steps will be skipped."
            exit 1
          fi

      - name: Pack Projects
        run: |
          for project in $(find src -name '*.csproj'); do
            dotnet pack "$project" --configuration Release --output ./output /p:PackageVersion=${{ env.FINAL_VERSION }}
          done

      - name: Publish to NuGet
        if: ${{ env.FINAL_VERSION != '' && !contains(env.FINAL_VERSION, 'pr') }}
        run: dotnet nuget push ./output/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate

      - name: Publish to GitHub Packages
        if: ${{ env.FINAL_VERSION != '' }}
        run: dotnet nuget push ./output/*.nupkg --api-key ${{ secrets.CI_CD }} --source "https://nuget.pkg.github.com/Rades98/index.json" --skip-duplicate
