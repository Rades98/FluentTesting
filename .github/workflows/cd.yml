name: CD

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches:
      - develop
  push:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Get Version from csproj
        id: get_version
        run: |
          # Extract version from  props file
          VERSION=$(grep -oPm1 "(?<=<Version>)[^<]+" src/FluentTesting/common.props)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "Extracted version: $VERSION"  # Log the extracted version

      - name: Set Final Version
        id: set_final_version
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            # Append -pr and the commit SHA to the version for pull requests
            FINAL_VERSION="${{ env.VERSION }}-pr-${GITHUB_SHA::8}"
            echo "FINAL_VERSION=${FINAL_VERSION}" >> $GITHUB_ENV
            echo "Final version set for PR: $FINAL_VERSION"  # Log the final version for PR
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            # Append -beta and the commit SHA to the version for pushes to develop
            FINAL_VERSION="${{ env.VERSION }}-beta-${GITHUB_SHA::8}"
            echo "FINAL_VERSION=${FINAL_VERSION}" >> $GITHUB_ENV
            echo "Final version set for beta: $FINAL_VERSION"  # Log the final version for beta
          else
            # Use the extracted version without changes for main
            echo "FINAL_VERSION=${{ env.VERSION }}" >> $GITHUB_ENV
            echo "Final version set (release): ${VERSION}"  # Log the final version without beta
          fi

      - name: Pack
        run: dotnet pack --configuration Release --output ./output /p:PackageVersion=${{ env.FINAL_VERSION }}

      - name: Publish to NuGet
        run: dotnet nuget push ./output/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
        
      - name: Publish to GitHub Packages
        run: dotnet nuget push ./output/*.nupkg --api-key ${{ secrets.CI_CD }} --source "https://nuget.pkg.github.com/Rades98/index.json" --skip-duplicate
