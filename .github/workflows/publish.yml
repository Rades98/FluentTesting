name: Build and Publish Package

on:
  workflow_dispatch:
  pull_request:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release

      - name: Get Version from csproj
        id: get_version
        run: |
          # Extract version from the .csproj or props file
          VERSION=$(grep -oPm1 "(?<=<Version>)[^<]+" src/FluentTesting/common.props)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "Extracted version: $VERSION"  # Log the extracted version

      - name: Set Final Version
        id: set_final_version
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            # Append -beta and the commit SHA to the version
            FINAL_VERSION="${{ env.VERSION }}-beta-${GITHUB_SHA::8}"
            echo "FINAL_VERSION=${FINAL_VERSION}" >> $GITHUB_ENV
            echo "Final version set for beta: $FINAL_VERSION"  # Log the final version for beta
          else
            # Use the extracted version without changes
            echo "FINAL_VERSION=${{ env.VERSION }}" >> $GITHUB_ENV
            echo "Final version set (no beta): ${VERSION}"  # Log the final version without beta
          fi

      - name: Pack
        run: dotnet pack --configuration Release --output ./output /p:PackageVersion=${{ env.FINAL_VERSION }}

      - name: Publish to NuGet
        run: dotnet nuget push ./output/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
        
      - name: Publish to GitHub Packages
        run: dotnet nuget push ./output/*.nupkg --api-key ${{ secrets.CI_CD }} --source "https://nuget.pkg.github.com/Rades98/index.json" --skip-duplicate
